#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast and fail hard.
set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2

mkdir -p $CACHE_DIR

if [ ! -e $CACHE_DIR/ghc ]; then
  GHC_URL="http://s3.amazonaws.com/haskell-heroku-buildpack/ghc.tar.gz"
  echo "-----> Downloading GHC"
  curl -# --max-time 120 -L "$GHC_URL" | tar xz -C $CACHE_DIR
fi

# Restore GHC registry if available
if [ -e $CACHE_DIR/dotghc ]; then
  rm -rf $HOME/.ghc
  mv $CACHE_DIR/dotghc $HOME/.ghc
fi

# Restore Cabal cache or download an empty environemt
if [ -e $CACHE_DIR/cabal ]; then
  rm -rf $HOME/.cabal
  mv $CACHE_DIR/cabal $HOME/.cabal
elif [ ! -e $HOME/.cabal ]; then
  CABAL_URL="http://s3.amazonaws.com/haskell-heroku-buildpack/cabal.tar.gz"
  echo "-----> Downloading Cabal"
  curl -# --max-time 120 -L "$CABAL_URL" | tar xz -C $HOME
fi

mkdir -p $CACHE_DIR/lib
ln -fs /usr/lib/libgmp.so.3 $CACHE_DIR/lib/libgmp.so

# GHC has shell scripts with a bunch of hardcoded references to
# /home/vagrant/ghc/*
#
# Let's murder it to death.
find $CACHE_DIR/ghc -type f -print0 | xargs -0 perl -i -p -e  "s{/home/vagrant/ghc}{$CACHE_DIR/ghc}g"

PATH=$CACHE_DIR/ghc/bin:$PATH

CONF="name: hpc \n
version: 0.5.1.1
id: hpc-0.5.1.1-aded85d3c95c51273fc3dedd3c91e956
license: BSD3
copyright:
maintainer: libraries@haskell.org
stability:
homepage:
package-url:
synopsis: Code Coverage Library for Haskell
description:
category: Control
author: Andy Gill
exposed: True
exposed-modules: Trace.Hpc.Util Trace.Hpc.Mix Trace.Hpc.Tix
                 Trace.Hpc.Reflect
hidden-modules:
trusted: False
import-dirs: /Library/Frameworks/GHC.framework/Versions/7.4.2-x86_64/usr/lib/ghc-7.4.2/hpc-0.5.1.1
library-dirs: /Library/Frameworks/GHC.framework/Versions/7.4.2-x86_64/usr/lib/ghc-7.4.2/hpc-0.5.1.1
hs-libraries: HShpc-0.5.1.1
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.5.1.0-81d626fb996bc7e140a3fd4481b338cd
         containers-0.4.2.1-75f143aa39a3e77a1ce2300025bdd8ce
         directory-1.1.0.2-72e928d14fc50f31f7e6404839a15691
         old-time-1.1.0.0-b8e05d63ad4954b34fe6dc2bcdddfd5d
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /Library/Frameworks/GHC.framework/Versions/7.4.2-x86_64/usr/share/doc/ghc/html/libraries/hpc-0.5.1.1/hpc.haddock
haddock-html: /Library/Frameworks/GHC.framework/Versions/7.4.2-x86_64/usr/share/doc/ghc/html/libraries/hpc-0.5.1.1"

echo $CONF > $CACHE_DIR/ghc/lib/ghc-7.4.1/package.conf.d/hpc-0.5.1.1-aded85d3c95c51273fc3dedd3c91e956.conf

echo "-----> Setting up ghc-pkg"
ghc-pkg recache
ghc-pkg describe base > base.conf

sed -i "s#ld-options:#ld-options: -L$CACHE_DIR/lib#" base.conf
perl -i -p -e  "s{/home/vagrant/ghc}{$CACHE_DIR/ghc}g" base.conf
ghc-pkg update base.conf
rm base.conf

ghc-pkg recache
ghc-pkg check

echo "-----> Check pkg-list"
ghc-pkg list

# haskell-platform
echo "-----> Download and install Haskell Platform"
curl -# http://lambda.haskell.org/platform/download/2012.2.0.0/haskell-platform-2012.2.0.0.tar.gz | tar xz
cd haskell-platform-2012.2.0.0
./configure
make
make install
cd ..

export PATH=$HOME/.cabal/bin:$PATH

echo "-----> Updating Cabal"
cabal update

echo "-----> Release the hounds! Installing application"
cd $BUILD_DIR
# the ld library path hack is horrible, but let's see if it helps
LD_LIBRARY_PATH=$CACHE_DIR/lib cabal install -j5 --disable-library-profiling --disable-executable-profiling --disable-shared

echo "-----> Caching Cabal packages"
shopt -s extglob
rm $HOME/.cabal/bin/!(cabal|happy)
mv $HOME/.cabal $CACHE_DIR/cabal
mv $HOME/.ghc $CACHE_DIR/dotghc

echo "Cache dir size:"
du -ms $CACHE_DIR
echo "Build dir size:"
du -ms $BUILD_DIR
