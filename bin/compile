#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast and fail hard.
set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2

cd $BUILD_DIR

if [ ! -e ghc ]; then
  GHC_URL="http://brianmckenna.org/files/heroku-buildpack-haskell/ghc.tar.gz"
  echo "-----> Downloading GHC"
  curl -# --max-time 120 -L "$GHC_URL" | tar xz
fi

# Restore Cabal cache or download an empty environemt
if [ -e $CACHE_DIR/cabal ]; then
  rm -rf $HOME/.cabal
  mv $CACHE_DIR/cabal $HOME/.cabal
elif [ ! -e .cabal ]; then
  CABAL_URL="http://brianmckenna.org/files/heroku-buildpack-haskell/cabal.tar.gz"
  echo "-----> Downloading Cabal"
  curl -# --max-time 120 -L "$CABAL_URL" | tar xz -C $HOME
fi

mkdir -p lib
ln -s /usr/lib/libgmp.so.3 lib/libgmp.so

# GHC has shell scripts with a bunch of hardcoded references to
# /home/vagrant/ghc/*
#
# Let's murder it to death.
find ghc -type f -print0 | xargs -0 perl -i -p -e  "s{/home/vagrant/ghc}{$BUILD_DIR/ghc}g"

PATH=$BUILD_DIR/ghc/bin:$PATH

echo "-----> Setting up ghc-pkg"
ghc-pkg recache
ghc-pkg describe base > base.conf

sed -i "s#ld-options:#ld-options: -L$BUILD_DIR/lib#" base.conf
perl -i -p -e  "s{/home/vagrant/ghc}{$BUILD_DIR/ghc}g" base.conf
ghc-pkg update base.conf
rm base.conf

ghc-pkg recache
ghc-pkg recache --user
ghc-pkg check

export PATH=$HOME/.cabal/bin:$PATH

echo "-----> Updating Cabal"
cabal update

echo "-----> Release the hounds! Installing application"
# the ld library path hack is horrible, but let's see if it helps
LD_LIBRARY_PATH=$BUILD_DIR/lib cabal install -j5 --disable-library-profiling --disable-executable-profiling --disable-shared

echo "-----> Caching Cabal packages"
shopt -s extglob
rm $HOME/.cabal/bin/!(cabal|happy)
mkdir -p $CACHE_DIR
mv $HOME/.cabal $CACHE_DIR/cabal
