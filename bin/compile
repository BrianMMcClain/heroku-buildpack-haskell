#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast and fail hard.
set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2

mkdir -p $CACHE_DIR

cd $BUILD_DIR
echo "build dir:"
ls -alR $BUILD_DIR

echo "cache dir:"
ls -alR $CACHE_DIR


cp -R $CACHE_DIR/ghc ghc  || true
cp -R $CACHE_DIR/cabal .cabal || true

if [ ! -e ghc ]; then
  GHC_URL="http://s3.amazonaws.com/heroku-buildpack-haskell/ghc.tar.gz"
  echo "-----> Downloading GHC"
  curl -# --max-time 120 -L "$GHC_URL" | tar xz
fi

if [ ! -e .cabal ]; then
  CABAL_URL="http://s3.amazonaws.com/heroku-buildpack-haskell/cabal.tar.gz"
  echo "-----> Bundling Cabal"
  curl -# --max-time 120 -L "$CABAL_URL" | tar xz
fi
pwd
mkdir -p bin
echo "what do we have?"
pwd
ls -R ghc/bin
ls -R .cabal

ln -s ghc/bin/ghc bin/ghc
ln -s .cabal/bin/cabal bin/cabal

cp -R ghc $CACHE_DIR/ghc
cp -R ghc /app

mkdir -p lib
ln -s /usr/lib/libgmp.so.3 lib/libgmp.so

# this is actually a shell script with a bunch of hardcoded
# references to /app/ghc/*

echo "setting up ghc-pkg"
ghc/bin/ghc-pkg describe base > base.conf
sed -i "s#ld-options:#ld-options: -L`pwd`/lib#" base.conf
ghc/bin/ghc-pkg update base.conf
rm base.conf

export PATH=/app/ghc/bin:$PATH
echo "updating cabal"
.cabal/bin/cabal update
echo "release the hounds! Installing the app"
.cabal/bin/cabal install


rm -rf $CACHE_DIR/cabal
cp -R .cabal $CACHE_DIR/cabal


echo "Cachedir:"
du -ms $CACHE_DIR | sort -n | tail -50

echo "builddir:"
du -m $BUILD_DIR | sort -n |tail -50

echo "home"
du -m /app |sort -n |tail -50
rm -rf $CACHE_DIR $BUILD_DIR /app/ghc
du -ms $CACHE_DIR $BUILD_DIR .
